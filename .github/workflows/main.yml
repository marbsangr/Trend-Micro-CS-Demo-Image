name: Trend Vision One Artifact Scanner

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: ${{ github.repository }}



jobs:
  BuildPushImage:
    runs-on: ubuntu-latest
    environment: DockerRegistry

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images:
            name/app
            ghcr.io/username/app
          tags:
            type=schedule
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=semver,pattern={{major}}
              type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

  TrendMicroArtifactScan:
    runs-on: ubuntu-latest
    environment: DockerRegistry
    needs: [BuildPushImage]
    steps:
        - name: Vision One Container Security Scan Action
          uses: trendmicro/tmas-scan-action@1.0.10
          with:
            # Mandatory
            TMAS_API_KEY: ${{ secrets.TMAS_API_KEY }}
            REGION: us-east-1

            # Optional
            SBOM: true # Saves SBOM to SBOM.json so you can export it as an artifact later.
            MALWARE_SCAN: true # Enable malware scan.
            IMAGE: marbsangr/django-app:45 # The image need to be public or the pipeline need to have access to the private image of choice.
            #LOCAL_IMAGE_TARBALL: image.tar
            # For each threshold below, select the maximum number of vulnerabilities that are acceptable.
            MAX_TOTAL: 0
            MAX_CRITICAL: 0
            MAX_HIGH: 0
            MAX_MEDIUM: 0
            MAX_LOW: 0
            MAX_NEGLIGIBLE: 0
            MAX_UNKNOWN: 0
            SCAN_RESULT_ARTIFACT: result.json # Save as an artifact in GitHub to be able to keep the result of the scan.
        - name: 'Upload Scan Result Artifact'
          uses: actions/upload-artifact@v3
          with:
            name: scan-result
            path: result.json
            retention-days: 30
        - name: 'Upload SBOM Artifact'
          uses: actions/upload-artifact@v3
          with:
            name: sbom
            path: SBOM.json
            retention-days: 30
